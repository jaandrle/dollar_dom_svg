const $dom_svg=function(){const e={},t=.001;return e.chartAddAxeLine=function({width:e,height:t}){return e>t?$dom.component("LINE",{y1:0,y2:0,x1:0,x2:e},{namespace_group:"SVG"}).share:$dom.component("LINE",{x1:e,x2:e,y1:0,y2:t},{namespace_group:"SVG"}).share},e.chartAddAxeWrapper=function({X:e,Y:t,className:a="C__chartAxe"}){const{add:n,addText:s,share:r}=$dom.component("G",{className:a,transform:`translate(${e} ${t})`},{namespace_group:"SVG"});return n("STYLE"),s("text{stroke-width:0}"),r},e.chartAddCanvasWrapper=function({className:e="C__chartCanvas",axis:[t,a],chart:[n,s]}){return $dom.component("SVG",{viewBox:`0 ${-s} ${n} ${s}`,width:n,height:s,overflow:"visible",transform:`translate(${t} ${a})`,className:e},{namespace_group:"SVG"}).share},e.chartAddLabelsTicksForAxeX=function({className:e="C__chartAxeX",width:a=233.33,size:n=1,delta:s=1,step:r=1,minimum:o=0,labels:i=!0,ticks:c=!0}){const d=s*r,{component:m,setShift:h,share:p}=$dom.component("G",{className:e},{namespace_group:"SVG"});return h(0),i&&m(function({delta_step:e,step:a,size:n,width:s,minimum:r}){const o=n,i=s+t,{add:c,addText:d,setShift:m,share:h}=$dom.component("G",{"dominant-baseline":"hanging"},{namespace_group:"SVG"});for(let t=r,n=0;n<=i;n+=e,t++)c("TEXT",{y:o,x:n}),d(t*a),m(-3);return h}({delta_step:d,step:r,size:n,width:a,minimum:o}),-1),c&&m(function({delta_step:e,width:a,size:n}){const s=n/2,r=a+t,{add:o,setShift:i,share:c}=$dom.component("G",null,{namespace_group:"SVG"});for(let t=0,a=0;a<=r;a+=e,t++)o("LINE",{x1:a,y1:-s,x2:a,y2:s}),i(-2);return c}({delta_step:d,width:a,size:n}),-1),p},e.chartAddLabelsTicksForAxeY=function({className:e="C__chartAxeY",width:a=7.5,height:n=100,size:s=1,delta:r=1,step:o=1,minimum:i=0,labels:c=!0,ticks:d=!0}){const m=r*o,h=.75*a,{component:p,setShift:u,share:l}=$dom.component("G",{className:e},{namespace_group:"SVG"});return u(0),c&&p(function({delta_step:e,step:a,x:n,height:s,minimum:r}){const{add:o,addText:i,setShift:c,share:d}=$dom.component("G",null,{namespace_group:"SVG"});for(let d=r,m=s;m>=-t;m+=e,d++)o("TEXT",{x:n,y:m,dy:"2%"}),i(d*a),c(-3);return d}({delta_step:m,step:o,x:h,height:n,minimum:i}),-1),d&&p(function({delta_step:e,height:a,width:n,size:s}){const r=n-s/2,o=n+s/2,{add:i,setShift:c,share:d}=$dom.component("G",null,{namespace_group:"SVG"});for(let n=0,s=a;s>=-t;s+=e,n++)i("LINE",{x1:r,y1:s,x2:o,y2:s}),c(-2);return d}({delta_step:m,height:n,width:a,size:s}),-1),l},e.chartHelperDataToPolylinePoints=function({dataX:e,dataY:t,metric:[a,n]}){return e.map((e,s)=>e*a+","+t[s]*n).join(" ")},e.chartHelperGetAreasSizes=function(e=[0,0],t=2.333333){const a=100*t,[n,s]=e;return[`0 0 ${a} 100`,[n,s],[a-2*n,100-2*s]]},e.chartHelperGetAxeXParams=function(e,t,a,n={}){const s=e[1];return Object.assign({X:e[0],Y:t[1]+s,width:t[0],delta:a[0],height:s},n)},e.chartHelperGetAxeYParams=function(e,t,a,n={}){return Object.assign({X:0,Y:e[1],width:e[0],height:t[1],delta:a[1]},n)},e.chartHelperGetDataMetric=function(e,t,a=[0,0]){return[e[0]/(t[0]-a[0]),-e[1]/(t[1]-a[1])]},e}();