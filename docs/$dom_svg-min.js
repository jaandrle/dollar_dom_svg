const $dom_svg=function(){const e={chartAddAxeLine:function({width:e,height:t}){return e>t?$dom.component("LINE",{y1:0,y2:0,x1:0,x2:e},{namespace_group:"SVG"}).share:$dom.component("LINE",{x1:e,x2:e,y1:0,y2:t},{namespace_group:"SVG"}).share},chartAddAxeWrapper:function({X:e,Y:t,className:a="C__chartAxe"}){const{add:n,addText:s,share:r}=$dom.component("G",{className:a,transform:`translate(${e} ${t})`},{namespace_group:"SVG"});return n("STYLE"),s("text{stroke-width:0}"),r},chartAddCanvasWrapper:function({className:e="C__chartCanvas",axis:[t,a],chart:[n,s]}){return $dom.component("SVG",{viewBox:`0 ${-s} ${n} ${s}`,width:n,height:s,overflow:"visible",transform:`translate(${t} ${a})`,className:e},{namespace_group:"SVG"}).share}};return e.chartAddLabelsTicksForAxeX=function({className:e="C__chartAxeX",width:t=233.33,height:a=10,size:n=1,delta:s=1,step:r=1,minimum:o=0,labels:i=!0,ticks:c=!0}){const d=s*r,{component:m,setShift:h,share:p}=$dom.component("G",{className:e},{namespace_group:"SVG"});return h(0),i&&m(function({delta_step:e,step:t,size:a,width:n,minimum:s}){const r=a,{add:o,addText:i,setShift:c,share:d}=$dom.component("G",{"dominant-baseline":"hanging"},{namespace_group:"SVG"});for(let a=s,d=0;d<=n;d+=e,a++)o("TEXT",{y:r,x:d}),i(a*t),c(-3);return d}({delta_step:d,step:r,size:n,width:t,minimum:o}),-1),c&&m(function({delta_step:e,width:t,size:a}){const n=a/2,{add:s,setShift:r,share:o}=$dom.component("G",null,{namespace_group:"SVG"});for(let a=0,o=0;o<=t;o+=e,a++)s("LINE",{x1:o,y1:-n,x2:o,y2:n}),r(-2);return o}({delta_step:d,width:t,size:n}),-1),p},e.chartAddLabelsTicksForAxeY=function({className:e="C__chartAxeY",width:t=7.5,height:a=100,size:n=1,delta:s=1,step:r=1,minimum:o=0,labels:i=!0,ticks:c=!0}){const d=s*r,m=.75*t,{component:h,setShift:p,share:u}=$dom.component("G",{className:e},{namespace_group:"SVG"});return p(0),i&&h(function({delta_step:e,step:t,dy:a,x:n,height:s,minimum:r}){const{add:o,addText:i,setShift:c,share:d}=$dom.component("G",null,{namespace_group:"SVG"});for(let d=r,m=s;m>=-.001;m+=e,d++)o("TEXT",{x:n,y:m,dy:a}),i(d*t),c(-3);return d}({delta_step:d,step:r,dy:"1.25%",x:m,height:a,minimum:o}),-1),c&&h(function({delta_step:e,height:t,width:a,size:n}){const s=a-n/2,r=a+n/2,{add:o,setShift:i,share:c}=$dom.component("G",null,{namespace_group:"SVG"});for(let a=0,n=t;n>=-.001;n+=e,a++)o("LINE",{x1:s,y1:n,x2:r,y2:n}),i(-2);return c}({delta_step:d,dy:"1.25%",height:a,width:t,size:n}),-1),u},e.chartHelperDataToPolylinePoints=function({dataX:e,dataY:t,metric:[a,n]}){return e.map((e,s)=>e*a+","+t[s]*n).join(" ")},e.chartHelperGetAreasSizes=function(e=[0,0],t=2.333333){const a=100*t,[n,s]=e;return[`0 0 ${a} 100`,[n,s],[a-2*n,100-2*s]]},e.chartHelperGetAxeXParams=function(e,t,a,n={}){const s=e[1];return Object.assign({X:e[0],Y:t[1]+s,width:t[0],delta:a[0],height:s},n)},e.chartHelperGetAxeYParams=function(e,t,a,n={}){return Object.assign({X:0,Y:e[1],width:e[0],height:t[1],delta:a[1]},n)},e.chartHelperGetDataMetric=function(e,t,a=[0,0]){return[e[0]/(t[0]-a[0]),-e[1]/(t[1]-a[1])]},e}();