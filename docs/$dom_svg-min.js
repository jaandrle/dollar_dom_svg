const $dom_svg=function(){const t={chart_parts:{},chart_helpers:{}},e=.001;return t.chart_parts.addAxeLine=function({width:t,height:e}){return t>e?$dom.component("line",{y1:0,y2:0,x1:0,x2:t},{namespace_group:"SVG"}).share:$dom.component("line",{x1:t,x2:t,y1:0,y2:e},{namespace_group:"SVG"}).share},t.chart_parts.addAxeWrapper=function({X:t,Y:e,className:n="C__chartAxe"}){const{add:a,addText:s,share:r}=$dom.component("g",{className:n,transform:`translate(${t} ${e})`},{namespace_group:"SVG"});return a("style"),s("text{stroke-width:0}"),r},t.chart_parts.addCanvasWrapper=function({className:t="C__chartCanvas",axis:[e,n],chart:[a,s]}){return $dom.component("svg",{viewBox:`0 ${-s} ${a} ${s}`,width:a,height:s,x:e,y:n,overflow:"visible",className:t},{namespace_group:"SVG"}).share},t.chart_parts.addLabelsTicksForAxeX=function({className:t="C__chartAxeX",width:n=233.33,size:a=1,delta:s=1,step:r=1,minimum:o=0,labels:i=!0,ticks:c=!0}){const d=s*r,{component:m,setShift:h,share:u}=$dom.component("g",{className:t},{namespace_group:"SVG"});return h(0),i&&m(function({delta_step:t,step:n,size:a,width:s,minimum:r}){const o=1.25*a,i=s+e,{add:c,addText:d,setShift:m,share:h}=$dom.component("g",{"dominant-baseline":"hanging"},{namespace_group:"SVG"});for(let e=0,a=0;a<=i;a+=t,e++)c("text",{y:o,x:a}),d(r+e*n),m(-3);return h}({delta_step:d,step:r,size:a,width:n,minimum:o}),-1),c&&m(function({delta_step:t,width:n,size:a}){const s=a/2,r=n+e,{add:o,setShift:i,share:c}=$dom.component("g",null,{namespace_group:"SVG"});for(let e=0,n=0;n<=r;n+=t,e++)o("line",{x1:n,y1:-s,x2:n,y2:s}),i(-2);return c}({delta_step:d,width:n,size:a}),-1),u},t.chart_parts.addLabelsTicksForAxeY=function({className:t="C__chartAxeY",width:n=7.5,height:a=100,size:s=1,delta:r=1,step:o=1,minimum:i=0,labels:c=!0,ticks:d=!0}){const m=r*o,h=.75*n,{component:u,setShift:p,share:l}=$dom.component("g",{className:t},{namespace_group:"SVG"});return p(0),c&&u(function({delta_step:t,step:n,x:a,height:s,minimum:r}){const{add:o,addText:i,setShift:c,share:d}=$dom.component("g",null,{namespace_group:"SVG"});for(let d=0,m=s;m>=-e;m+=t,d++)o("text",{x:a,y:m,dy:"2%"}),i(r+d*n),c(-3);return d}({delta_step:m,step:o,x:h,height:a,minimum:i}),-1),d&&u(function({delta_step:t,height:n,width:a,size:s}){const r=a-s/2,o=a+s/2,{add:i,setShift:c,share:d}=$dom.component("g",null,{namespace_group:"SVG"});for(let a=0,s=n;s>=-e;s+=t,a++)i("line",{x1:r,y1:s,x2:o,y2:s}),c(-2);return d}({delta_step:m,height:a,width:n,size:s}),-1),l},t.global_defs=function(){const t=new Set;let e,n;return{mount:a,add:function(n,s,...r){if(a(document.body),t.has(n))return n;return s().mount(e,...r).id=n,t.add(n),n},clear:function(){n.remove()}};function a(...a){return n||(n=function(){const{add:a,ondestroy:s,share:r}=$dom.component("svg",{style:"position:fixed;top:-100vh;left:-100vw;"});return a("defs").oninit(t=>e=t),s(function(){e=null,n=void 0,t.clear()}),r}().mount(...a)),n}}(),t.chart_helpers.dataToPolylinePoints=function({dataX:t,dataY:e,metric:[n,a,s]}){const[r,o]=s;return t.map((t,s)=>(t-r)*n+","+(e[s]-o)*a).join(" ")},t.chart_helpers.getAreasSizes=function(t=[0,0],e=2.333333){const n=100*e,[a,s]=t;return[`0 0 ${n} 100`,[a,s],[n-2*a,100-2*s]]},t.chart_helpers.getAxeXParams=function(t,e,n,a={}){const s=t[1];return Object.assign({X:t[0],Y:e[1]+s,width:e[0],delta:n[0],minimum:n[2][0],height:s},a)},t.chart_helpers.getAxeYParams=function(t,e,n,a={}){return Object.assign({X:0,Y:t[1],width:t[0],height:e[1],delta:n[1],minimum:n[2][1]},a)},t.chart_helpers.getDataMetric=function(t,e,n=[0,0]){return[t[0]/(e[0]-n[0]),-t[1]/(e[1]-n[1]),n]},t}();